//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.BackendGroupService"/> </summary
    public sealed class BackendGroupServiceClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public BackendGroupServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "BackendGroupService";
            }
        }
        
        /// <summary>
        /// Call the GetBannedGroups method on the BackendGroupService microservice
        /// <see cref="Beamable.Microservices.BackendGroupService.GetBannedGroups"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<System.Collections.Generic.List<long>>> GetBannedGroups(string leaderboardName)
        {
            object raw_leaderboardName = leaderboardName;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("leaderboardName", raw_leaderboardName);
            return this.Request<Beamable.Common.Utils.Response<System.Collections.Generic.List<long>>>("BackendGroupService", "GetBannedGroups", serializedFields);
        }
        
        /// <summary>
        /// Call the BanGroup method on the BackendGroupService microservice
        /// <see cref="Beamable.Microservices.BackendGroupService.BanGroup"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> BanGroup(string leaderboardName, long targetGroupId)
        {
            object raw_leaderboardName = leaderboardName;
            object raw_targetGroupId = targetGroupId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("leaderboardName", raw_leaderboardName);
            serializedFields.Add("targetGroupId", raw_targetGroupId);
            return this.Request<Beamable.Common.Utils.Response<bool>>("BackendGroupService", "BanGroup", serializedFields);
        }
        
        /// <summary>
        /// Call the UnbanGroup method on the BackendGroupService microservice
        /// <see cref="Beamable.Microservices.BackendGroupService.UnbanGroup"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> UnbanGroup(string leaderboardName, long targetGroupId)
        {
            object raw_leaderboardName = leaderboardName;
            object raw_targetGroupId = targetGroupId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("leaderboardName", raw_leaderboardName);
            serializedFields.Add("targetGroupId", raw_targetGroupId);
            return this.Request<Beamable.Common.Utils.Response<bool>>("BackendGroupService", "UnbanGroup", serializedFields);
        }
        
        /// <summary>
        /// Call the GetAllLeaderboardsWithBannedGroups method on the BackendGroupService microservice
        /// <see cref="Beamable.Microservices.BackendGroupService.GetAllLeaderboardsWithBannedGroups"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<System.Collections.Generic.List<Beamable.Common.Models.LeaderboardData>>> GetAllLeaderboardsWithBannedGroups()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<Beamable.Common.Utils.Response<System.Collections.Generic.List<Beamable.Common.Models.LeaderboardData>>>("BackendGroupService", "GetAllLeaderboardsWithBannedGroups", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersBackendGroupServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForBackendGroupServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<BackendGroupServiceClient>();
        }
        
        public static BackendGroupServiceClient BackendGroupService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<BackendGroupServiceClient>();
        }
    }
}
